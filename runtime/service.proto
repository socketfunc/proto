syntax = "proto3";

package runtime;

option go_package = "github.com/socketfunc/proto/runtime";

import "store/value.proto";
import "store/filter.proto";
import "store/update.proto";

service RuntimeService {
    rpc Stream (stream Receive) returns (stream Send) {}
    rpc Healthz (HealthzRequest) returns (HealthzResponse) {}
}

enum Cmd {
    STREAM = 0;
    STORE = 1;
}

message Receive {
    Cmd cmd = 1;
    StreamRequest stream_request = 2;
    StoreResponse store_response = 3;
}

message Send {
    Cmd cmd = 1;
    StreamSend stream_send = 2;
    StoreRequest store_request = 3;
}

message StreamRequest {
    string topic = 1;
    string event = 2;
    bytes payload = 3;
}

message StreamSend {
    string topic = 1;
    string event = 2;
    bytes payload = 3;
}

enum Store_Cmd {
    GET = 0;
    PUT = 1;
    MODIFY = 2;
    DEL = 3;
}

message StoreRequest {
    Store_Cmd cmd = 1;
    string key = 2;
    store.Entity entity = 3;
    repeated store.Filter filters = 4;
    repeated store.Update updates = 5;
}

message StoreResponse {
    Store_Cmd cmd = 1;
    bool success = 2;
    store.Entity entity = 3;
}

message HealthzRequest {}

message HealthzResponse {}
